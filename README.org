#+STARTUP: showall
#+TITLE: dotfiles

# sets HTML export theme to readthedocs like theme.
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://fniessen.github.io/org-html-themes/styles/readtheorg/css/htmlize.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://fniessen.github.io/org-html-themes/styles/readtheorg/css/readtheorg.css"/>
#+HTML_HEAD: <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
#+HTML_HEAD: <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://fniessen.github.io/org-html-themes/styles/lib/js/jquery.stickytableheaders.min.js"></script>
#+HTML_HEAD: <script type="text/javascript" src="https://fniessen.github.io/org-html-themes/styles/readtheorg/js/readtheorg.js"></script>

#+HTML:<div align="right" style="display: flex; justify-content: flex-end">
#+HTML:<a href="https://github.com/mohkale/.dotfiles" style="margin-left: 4px;"><img src="https://github.com/mohkale/puddle/workflows/build/badge.svg" /></a>
#+HTML:<a href="https://github.com/mohkale/.dotfiles" style="margin-left: 4px;"><img src="https://github.com/mohkale/puddle/workflows/tests/badge.svg" /></a>
#+HTML:<a href="https://github.com/mohkale/.dotfiles" style="margin-left: 4px;"><img src="https://img.shields.io/website?down_message=down&label=docs&up_message=up&url=https%3A%2F%2Fmohkale.github.io%2Fpuddle%2F" /></a>
#+HTML:</div>

My dotfile repository, happily brought to you by [[https://github.com/anishathalye/dotbot][dotbot]] :book:.

#+caption: an-old-hope
[[file:.github/main.png]]

* Requirements
  - python >= 3.7

* Installation Instructions
  =git clone /uri/of/this/repo ~/.dotfiles && cd ~/.dotfiles && ./install= will install
  a basic dotfile configuration for you.

  However you'll more likely want to setup a bunch of different things, and to that end
  you can do so by passing the ~DOTBOTS~ environment variable to install. ~DOTBOTS~
  should be a [[https://en.wikipedia.org/wiki/Comma-separated_values][CSV]] list of features you want installed, for a list of available features
  you can run:

  #+NAME: config-options
  #+BEGIN_SRC sh :results value list :exports code
  ./setup/list-opts
  #+END_SRC

  WARN: to run the above command, you must have loaded any required submodules.
  you can do so non-destructively by running ~./install --help~.

  I recommend using the dotbots specified by ~./setup/suggested -awe --nvim~. I.E.

  #+BEGIN_SRC sh :results value :exports code
  DOTBOTS=$(./setup/suggested -awe --nvim | tr '\n' ',') ./install
  #+END_SRC

* Supported Platforms
  * [[https://gitforwindows.org/][git-bash-for-windows]]@2.25.1
  * [[http://www.mingw.org/wiki/MSYS][msys]]@2019.05.24

* Directory Layout
  | path     | purpose                                                    |
  |----------+------------------------------------------------------------|
  | core     | core files which're installed regardless of environment.   |
  | desktop  | configs for desktop environments, window managers, etc.    |
  | editors  | vim, emacs... what more do you need.                       |
  | langs    | setup multiple programming languages & environments.       |
  | programs | sets up various programs, eg. zathura or konsole.          |
  | dist     | configurations for specific distros or environments.       |
  | bin      | scripts, executables, commands. you get the idea :sunglasses:.       |
  | shells   | bash, zsh, etc. each have their own setup requirements.    |
  | setup    | dotbot, plugins for dotbot, dotfile introspection scripts. |

* Notes
  - On windows, you must run install from an elevated shell. This is because windows
    doesn't allow users with regular privilages to create symbolic links.
  - On windows, [[https://chocolatey.org/][chocolatey]] doesn't seem to like installation when stderr is the null
    device. The only workaround as of now is to run ~./install~ with the ~-v~ flag
    (or to configure chocolatey to always output).
  - for those using windows, make sure to order the msys package manager before pacman.
    msys uses the pacman package manager... and so does arch; meaning if your pacman
    packages come before your msys ones, the pacman packages will be installed even when
    you're on windows.
