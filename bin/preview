#!/usr/bin/env bash
# original source [[https://github.com/gokcehan/lf/wiki/Ranger][here]].

set -C -f -u
IFS=$'\n'

# ANSI color codes are supported.
# STDIN is disabled, so interactive scripts won't work properly

# Script arguments
FILE_PATH="$1"         # Full path of the highlighted file

FILE_EXTENSION="${FILE_PATH##*.}"
FILE_EXTENSION_LOWER=$(tr '[:upper:]' '[:lower:]' <<< "$FILE_EXTENSION")

# Settings
HIGHLIGHT_SIZE_MAX=262143  # 256KiB
HIGHLIGHT_TABWIDTH=8
HIGHLIGHT_STYLE='pablo'
PYGMENTIZE_STYLE='autumn'
BAT_THEME='an-old-hope'

# early cancel switch when previewing directories. this isn't done
# by ranger/lf, but my fzf script might use this script for previews.
if [ -d "$FILE_PATH" ]; then
    ls "$FILE_PATH" --color=always --group-directories-first -1
    exit 0
fi

MIMETYPE="$(file --dereference --brief --mime-type -- "$FILE_PATH")"

_pygmentize_format() {
    if [ "$( tput colors )" -ge 256 ]; then
        echo 'terminal256'
    else
        echo 'terminal'
    fi
}

_highlight_format() {
    if [ "$( tput colors )" -ge 256 ]; then
        echo 'xterm256'
    else
        echo 'ansi'
    fi
}

do_archive() {
    atool  --list -- "$1"     && exit
    bsdtar --list --file "$1" && exit
}

do_rar() {
    ## Avoid password prompt by providing empty password
    unrar lt -p- -- "$1" && exit
}

do_7z() {
    ## Avoid password prompt by providing empty password
    7z l -p -- "$1" && exit
}

do_pdf() {
    ## Preview as text conversion
    pdftotext -l 10 -nopgbrk -q -- "$1" - | fmt -w "$PV_WIDTH" && exit
    mutool draw -F txt -i -- "$1" 1-10    | fmt -w "$PV_WIDTH" && exit
    exiftool "$1"                                              && exit
}

do_torrent() {
    transmission-show -- "$1" && exit
}

# open documents
do_opendoc() {
    ## Preview as text conversion
    odt2txt "$1" && exit
    ## Preview as markdown conversion
    pandoc -s -t markdown -- "$1" && exit
}

do_xlsx() {
    ## Preview as csv conversion
    ## Uses: https://github.com/dilshod/xlsx2csv
    xlsx2csv -- "$1" && exit
}

do_json() {
    jq --color-output . "$1"    && exit
    python -m json.tool -- "$1" && exit
}

do_html() {
    w3m -dump "$1"                && exit
    lynx -dump -- "$1"            && exit
    elinks -dump "$1"             && exit
    pandoc -s -t markdown -- "$1" && exit
}

## Direct Stream Digital/Transfer (DSDIFF) and wavpack aren't detected
## by file(1).
do_DSDIFF() {
    mediainfo "$1" && exit
    exiftool  "$1" && exit
}

# Preview as text conversion
do_img() {
    # viu -- "$FILE_PATH" && exit
    # img2txt --gamma=0.6 -- "$FILE_PATH" && exit
    exiftool "$FILE_PATH" && exit
}

do_text() {
    if command -v bat >/dev/null; then
        bat -p --color always --theme "$BAT_THEME" --paging never -- "$1" && exit
    elif command -v highlight >/dev/null; then
        # Syntax highlight
        if [ "$( stat --printf='%s' -- "$1" )" -gt "$HIGHLIGHT_SIZE_MAX" ]; then
            cat "$1" && exit 0
        fi

        highlight --replace-tabs="$HIGHLIGHT_TABWIDTH" --out-format="$(_highlight_format)" \
                  --style="$HIGHLIGHT_STYLE" --force -- "$1"
    elif command -v pygmentize >/dev/null; then
        pygmentize -f "$(_pygmentize_format)" -O "style=$PYGMENTIZE_STYLE" -- "$1" && exit 0
    else
        cat "$1" && exit 0
    fi
}

do_video() {
    if mediainfo "$1" && exiftool  "$1"; then exit; fi
}

handle_extension() {
    case "$FILE_EXTENSION_LOWER" in
        a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
        rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)
            do_archive "$FILE_PATH"
            exit 1 ;;
        rar)
            do_rar "$FILE_PATH"
            exit 1 ;;
        7z)
            do_7z "$FILE_PATH"
            exit 1 ;;
        pdf)
            do_pdf "$FILE_PATH"
            exit 1 ;;
        torrent)
            do_torrent "$FILE_PATH"
            exit 1 ;;
        odt|ods|odp|sxw)
            do_opendoc "$FILE_PATH"
            exit 1 ;;
        xlsx)
            do_xlsx "$FILE_PATH"
            exit 1 ;;
        htm|html|xhtml)
            do_html "$FILE_PATH" ;;
        json|ipynb*)
            do_json "$FILE_PATH" ;;
        dff|dsf|wv|wvc)
            do_DSDIFF "$FILE_PATH" ;;
    esac
}

handle_mime() {
    case "$MIMETYPE" in
        text/* | */xml)
            do_text "$FILE_PATH"
            exit 1 ;;
        image/*)
            do_img "$FILE_PATH"
            exit 1 ;;
        video/* | audio/*|application/octet-stream)
            do_video "$FILE_PATH"
            exit 1 ;;
        */json)
            do_json "$FILE_PATH"
            exit 1 ;;
    esac
}

handle_fallback() {
    echo '----- File Type Classification -----'
    file --dereference --brief -- "$FILE_PATH"
    exit 1
}

handle_extension
handle_mime
handle_fallback

exit 1
