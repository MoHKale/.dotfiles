;; -*- mode: clojure -*-
(
 (:import "../prog/chocolatey"
          "../prog/desktop/windows")

 ;; setup msys, the unix like environment for windows
 (:packages (:chocolatey "msys2"))

 ;; by default msys uses it's own home directory independent from
 ;; my user home directory. That would require me to have to sync
 ;; my dotfiles in 2 places, so lets just make msys use my real home
 ;; directory.
 (:shell {:desc "Setting msys Home Directory"
          :cmd "conf_file=\"c:/tools/msys64/etc/nsswitch.conf\"
                if ! [ -f \"$conf_file\" ]; then
                  echo \"failed to set msys user home directory, conf file doesn't exist\" >&2
                  exit 1
                fi

                sed -i -e 's/db_home: cygwin desc/db_home: windows/' \"$conf_file\""})

 ;; by default msys completely disregards your user path and
 ;; builds it's own PATH independent from it. Let's prevent that.
 (:shell {:desc "Allowing Windows PATH Inheritance"
          :cmd "conf_file=\"c:/tools/msys64/msys2_shell.cmd\"
                if ! [ -f \"$conf_file\" ]; then
                  echo 'failed to set PATH inheritance, conf file doesn't exist' >&2
                  exit 1
                fi

                sed -i -e 's/rem \\(set MSYS2_PATH_TYPE=inherit\\)/\\1/' \"$conf_file\""})

 (:packages (:msys "base-devel"
                   "make"
                   "gcc"
                   "mingw-w64-x86_64-gcc"))

 (:import "../prog/git")

 ;; A terminal wrapper to support some modern escape codes on the archaic
 ;; windows platform.
 (:shell {:desc "Installing winpty"
          :cmd "[ -e \"c:/tools/msys64/usr/local/bin/winpty.exe\" ] && exit 0
                set -e

                c:/tools/msys64/usr/bin/env bash << \"EOF\"
                  cd $(mktemp -d)
                  git clone https://github.com/rprichard/winpty .

                  export PATH=/mingw64/bin/:$PATH
                  ./configure
                  make install
                EOF"})

 ;; some extra cool windows additions
 (:import "../prog/wsl"
          "../prog/cmder")
)
